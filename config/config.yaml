# 机场订阅，名称不能重复
proxy-providers:
  Airport_01:
    type: http
    interval: 1800
    health-check:
      enable: true
      url: http://103.135.101.126:3001/oadVwPionJqdzebqujZvHUro4LdZCA/download/collection/%E6%9C%80%E5%BC%BA%E7%A5%9E%E5%A7%AC?target=ClashMeta
      interval: 300
    proxy: 🟢 直连
    url: "最强神姬"
      
# 用于下载订阅时指定UA
global-ua: clash
    
# 全局配置
port: 7890
socks-port: 7891
redir-port: 7892
mixed-port: 7893
tproxy-port: 7894
ipv6: false
allow-lan: true
unified-delay: true
tcp-concurrent: true
  
geodata-mode: false
geodata-loader: standard
geo-auto-update: true
geo-update-interval: 48
geox-url:
  geoip: "https://testingcf.jsdelivr.net/gh/MetaCubeX/meta-rules-dat@release/geoip.dat"
  geosite: "https://testingcf.jsdelivr.net/gh/MetaCubeX/meta-rules-dat@release/geosite.dat"
  mmdb: "https://testingcf.jsdelivr.net/gh/MetaCubeX/meta-rules-dat@release/country.mmdb"
  asn: "https://github.com/xishang0128/geoip/releases/download/latest/GeoLite2-ASN.mmdb"
  
# 控制面板
external-controller: 0.0.0.0:9090
secret: ""
external-ui: ui
external-ui-url: "https://github.com/MetaCubeX/metacubexd/archive/refs/heads/gh-pages.zip"

# 匹配进程 always/strict/off
find-process-mode: strict
global-client-fingerprint: chrome
keep-alive-idle: 600
keep-alive-interval: 30

# 策略组选择和fakeip缓存
profile:
  store-selected: true
  store-fake-ip: true
  
# 流量嗅探
sniffer:
  enable: true
  sniff:
    HTTP:
      ports: [80, 8080-8880]
      override-destination: true
    TLS:
      ports: [443, 8443]
    QUIC:
      ports: [443, 8443]
  force-domain:
    - +.v2ex.com
  skip-domain:
    - "dlg.io.mi.com"
    - "+.push.apple.com"
    - "+.apple.com"
    
# 代理模式
tun:
  enable: true
  stack: mixed
  mtu: 9000
  dns-hijack:
    - "any:53"
    - "tcp://any:53"
  auto-route: true
  auto-redirect: true
  auto-detect-interface: true
  
# DNS模块
dns:
  enable: true
  listen: 0.0.0.0:1053
  ipv6: false
  respect-rules: true
  # 模式切换 redir-host / fake-ip
  enhanced-mode: fake-ip
  fake-ip-range: 28.0.0.1/8
  # 模式切换 whitelist/blacklist 
  # 黑名单模式表示如果匹配成功则不返回 Fake-IP, 白名单模式时只有匹配成功才返回 Fake-IP
  fake-ip-filter-mode: blacklist
  fake-ip-filter:
    - "+.lan"
    - "+.local"
    - geosite:private
    - geosite:cn
  default-nameserver:
    - 223.5.5.5
    - 119.29.29.29
  proxy-server-nameserver:
    - 223.5.5.5
    - 119.29.29.29
  nameserver:
    - 223.5.5.5
    - 119.29.29.29
  nameserver-policy:
    "rule-set:private_domain,cn_domain":
    - 223.5.5.5
    - 119.29.29.29
    "rule-set:geolocation-!cn":
      - "https://dns.cloudflare.com/dns-query"
      - "https://dns.google/dns-query"
 
   
proxies:
- name: "🟢 直连"
  type: direct
  udp: true
 
# 锚点
proxy-groups:
  - name: "🚀 节点选择"
    type: select
    proxies:
      - "🇭🇰 香港节点"
      - "🇯🇵 日本节点"
      - "🇺🇲 美国节点"
      - "🇰🇷 韩国节点"
      - "🇸🇬 狮城节点"
      - "🇨🇳 台湾节点"
      - "DIRECT"
  
  - name: "♻️ 自动选择"
    type: url-test
    url: "http://www.gstatic.com/generate_204"
    interval: 300
    tolerance: 50
    proxies:
      - "🇭🇰 香港节点"
      - "🇯🇵 日本节点"
      - "🇺🇲 美国节点"
      - "🇰🇷 韩国节点"
      - "🇸🇬 狮城节点"
      - "🇨🇳 台湾节点"
      - "DIRECT"

  - name: "🐉 优化线路"
    type: select
    proxies:
      - "PIS"
      - "4837"
      - "JPP"
      - "Pro"

  - name: "📢 谷歌FCM"
    type: select
    proxies:
      - "🇭🇰 香港节点"
      - "🇨🇳 台湾节点"
      - "🇸🇬 狮城节点"
      - "🇯🇵 日本节点"
      - "🇺🇲 美国节点"
      - "🇰🇷 韩国节点"
      - "DIRECT"

  - name: "💬 OpenAi"
    type: select
    proxies:
      - "🇭🇰 香港节点"
      - "🇨🇳 台湾节点"
      - "🇸🇬 狮城节点"
      - "🇯🇵 日本节点"
      - "🇺🇲 美国节点"
      - "🇰🇷 韩国节点"
      - "DIRECT"

  - name: "🐬 OneDrive"
    type: select
    proxies:
      - "🇭🇰 香港节点"
      - "🇨🇳 台湾节点"
      - "🇸🇬 狮城节点"
      - "🇯🇵 日本节点"
      - "🇺🇲 美国节点"
      - "🇰🇷 韩国节点"
      - "DIRECT"

  - name: "🎶 网易音乐"
    type: select
    proxies:
      - "DIRECT"
      - "🇭🇰 香港节点"
      - "🇨🇳 台湾节点"
      - "🇸🇬 狮城节点"
      - "🇯🇵 日本节点"
      - "🇺🇲 美国节点"
      - "🇰🇷 韩国节点"

  - name: "🎯 全球直连"
    type: select
    proxies:
      - "DIRECT"
      - "🇭🇰 香港节点"
      - "🇨🇳 台湾节点"
      - "🇸🇬 狮城节点"
      - "🇯🇵 日本节点"
      - "🇺🇲 美国节点"
      - "🇰🇷 韩国节点"

  - name: "🛑 广告拦截"
    type: select
    proxies:
      - "REJECT"
      - "DIRECT"

  - name: "🍃 应用净化"
    type: select
    proxies:
      - "REJECT"
      - "DIRECT"

  - name: "🐟 漏网之鱼"
    type: select
    proxies:
      - "🇭🇰 香港节点"
      - "🇨🇳 台湾节点"
      - "🇸🇬 狮城节点"
      - "🇯🇵 日本节点"
      - "🇺🇲 美国节点"
      - "🇰🇷 韩国节点"
      - "DIRECT"

  - name: "🎥 奈飞视频"
    type: select
    proxies:
      - "🎥 奈飞节点"
      - "🇭🇰 香港节点"
      - "🇨🇳 台湾节点"
      - "🇸🇬 狮城节点"
      - "🇯🇵 日本节点"
      - "🇺🇲 美国节点"
      - "🇰🇷 韩国节点"
      - "DIRECT"

  - name: "🎮 游戏平台"
    type: select
    proxies:
      - "DIRECT"
      - "🇭🇰 香港节点"
      - "🇨🇳 台湾节点"
      - "🇸🇬 狮城节点"
      - "🇯🇵 日本节点"
      - "🇺🇲 美国节点"
      - "🇰🇷 韩国节点"

rules:
  - DOMAIN-SUFFIX,google.com,🎯 全球直连
  - DOMAIN-SUFFIX,github.com,👨🏿‍💻 GitHub
  - DOMAIN-SUFFIX,tiktok.com,🎶 TikTok
  - DOMAIN-SUFFIX,steam.com,🎮 游戏平台
  - DOMAIN-SUFFIX,netflix.com,🎥 奈飞视频
  - DOMAIN-SUFFIX,youtube.com,📹 油管视频
  - DOMAIN-SUFFIX,bilibili.com,📺 哔哩哔哩
  - DOMAIN-SUFFIX,netease.com,🎶 网易音乐
  - DOMAIN-SUFFIX,onedrive.com,🐬 OneDrive
  - DOMAIN-SUFFIX,microsoft.com,🪟 Microsoft
  - DOMAIN-SUFFIX,apple.com,🍎 苹果服务
  - DOMAIN-SUFFIX,openai.com,💬 OpenAi
  - DOMAIN-SUFFIX,telegram.org,📲 电报消息
  - DOMAIN-SUFFIX,baidu.com,🌏 国内媒体
  - DOMAIN-SUFFIX,bbc.com,🌍 国外媒体
  - DOMAIN-SUFFIX,ba.com.tw,📺 巴哈姆特
  - DOMAIN-SUFFIX,netflix.com,🎥 奈飞视频
rule-anchor:
  ip: &ip {type: http, interval: 86400, behavior: ipcidr, format: mrs}
  domain: &domain {type: http, interval: 86400, behavior: domain, format: mrs}
  qcy: &qcy {type: http, interval: 86400, behavior: domain, format: text}
  class: &class {type: http, interval: 86400, behavior: classical, format: text}
rule-providers: 
  private_domain: {!!merge <<: *domain, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/private.mrs"}
  proxylite: {!!merge <<: *class, url: "https://raw.githubusercontent.com/qichiyuhub/rule/refs/heads/master/ProxyLite.list"}
  ai: {!!merge <<: *class, url: "https://raw.githubusercontent.com/qichiyuhub/rule/refs/heads/master/AI.list"}
  youtube_domain: {!!merge <<: *domain, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/youtube.mrs"}
  google_domain: {!!merge <<: *domain, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/google.mrs"}
  github_domain: {!!merge <<: *domain, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/github.mrs"}
  telegram_domain: {!!merge <<: *domain, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/telegram.mrs"}
  netflix_domain: {!!merge <<: *domain, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/netflix.mrs"}
  paypal_domain: {!!merge <<: *domain, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/paypal.mrs"}
  onedrive_domain: {!!merge <<: *domain, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/onedrive.mrs"}
  microsoft_domain: {!!merge <<: *domain, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/microsoft.mrs"}
  apple_domain: {!!merge <<: *domain, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/apple-cn.mrs"}
  speedtest_domain: {!!merge <<: *domain, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/ookla-speedtest.mrs"}
  tiktok_domain: {!!merge <<: *domain, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/tiktok.mrs"}
  gfw_domain: {!!merge <<: *domain, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/gfw.mrs"}
  geolocation-!cn: {!!merge <<: *domain, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/geolocation-!cn.mrs"}
  cn_domain: {!!merge <<: *domain, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/cn.mrs"}
  
  cn_ip: {!!merge <<: *ip, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geoip/cn.mrs"}
  google_ip: {!!merge <<: *ip, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geoip/google.mrs"}
  telegram_ip: {!!merge <<: *ip, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geoip/telegram.mrs"}
  netflix_ip: {!!merge <<: *ip, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geoip/netflix.mrs"}
